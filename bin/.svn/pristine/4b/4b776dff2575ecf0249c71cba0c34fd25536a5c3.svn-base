# 配置root logger (所有日志以DEBUG级别stdout方式输出)
log4j.rootLogger=DEBUG
# 指定src.Queue包下的所有类的等级为DEBUG
log4j.logger.Queue.QueueGetter=DEBUG,QueueGetter
log4j.logger.Queue.SingletonDataQueue=DEBUG,Queue
log4j.logger.RMI=DEBUG,RMI

# 配置stdout(输出到控制台)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# 指定输出格式
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
# %t 输出产生该日志事件的线程名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921 
# %m  %m 输出代码中指定的消息 
# %n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,sss} [%t] %m%n

# 配置log(每天产生一个日志文件)
log4j.appender.QueueGetter=org.apache.log4j.DailyRollingFileAppender
log4j.appender.QueueGetter.File=./log/QueueGetter.log
log4j.appender.QueueGetter.Append = true
# 输出DEBUG级别以上的日志
log4j.appender.QueueGetter.Threshold = DEBUG
log4j.appender.QueueGetter.layout = org.apache.log4j.PatternLayout
log4j.appender.QueueGetter.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,sss} [%t] %m%n 

# 配置log(每天产生一个日志文件)
log4j.appender.Queue=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Queue.File=./log/Queue.log
log4j.appender.Queue.Append = true
# 输出DEBUG级别以上的日志
log4j.appender.Queue.Threshold = DEBUG
log4j.appender.Queue.layout = org.apache.log4j.PatternLayout
log4j.appender.Queue.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,sss} [%t] %m%n 


# 配置log(每天产生一个日志文件)
log4j.appender.RMI=org.apache.log4j.DailyRollingFileAppender
log4j.appender.RMI.File=./log/Putter.log
log4j.appender.RMI.Append = true
# 输出DEBUG级别以上的日志
log4j.appender.RMI.Threshold = DEBUG
log4j.appender.RMI.layout = org.apache.log4j.PatternLayout
log4j.appender.RMI.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,sss} [%t] %m%n